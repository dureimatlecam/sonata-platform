# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
parameters:

    locale: 'fr'
    mailer_user: 'root@root.fr'
    
    sonata.media.admin.media.class: App\Admin\MediaAdmin\MediaAdmin
    sonata.media.admin.gallery.class: App\Admin\MediaAdmin\GalleryAdmin

services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/*'
        exclude: '../src/{DependencyInjection,Entity,Migrations,Tests,Kernel.php,Bundle}'

    # controllers are imported separately to make sure services can be injected
    # as action arguments even if you don't extend any base controller class
    App\Controller\:
        resource: '../src/Controller'
        tags: ['controller.service_arguments']

    # add more service definitions when explicit configuration is needed
    # please note that last definitions always *replace* previous ones
    
    # service for KnpMenuBundle compatibility with symfony 4
    app.service.menu_builder:
        class: App\Service\Menu\MenuBuilder
        arguments: ["@knp_menu.factory"]
        tags:
            - { name: knp_menu.menu_builder, method: header, alias: header }
            - { name: knp_menu.menu_builder, method: footer, alias: footer }
    
    #  service for override jwt token informations
    app.event.authentication_success_response:
        class: App\EventListener\AuthenticationSuccessListener
        tags:
            - { name: kernel.event_listener, event: lexik_jwt_authentication.on_authentication_success, method: onAuthenticationSuccessResponse }

# imports:
#     - { resource: '%kernel.project_dir%/file.yaml' }

    admin.user:
        class: App\Admin\User\UserAdmin
        arguments: [~, App\Entity\User\User, ~]
        tags:
            - { name: sonata.admin, manager_type: orm, group: admin, label: Utilisateurs }
        public: true

    # Api platform CamelCaseToSnakeCaseNameConverter
    'Symfony\Component\Serializer\NameConverter\CamelCaseToSnakeCaseNameConverter': ~

    #  Add date request to Api "date" field
    'App\Serializer\Api\AddDateNormalizer':
        decorates: 'api_platform.jsonld.normalizer.item'
        arguments: [ '@App\Serializer\Api\AddDateNormalizer.inner' ]
        