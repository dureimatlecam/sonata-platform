sonata_user:
    security_acl: false
    manager_type: orm      # can be orm or mongodb

    table:
        user_group: "admin_admin_group"

    impersonating:
        route:                sonata_admin_dashboard
        # parameters:           { path: / }

    class:                  # Entity Classes
        user:               App\Entity\UserAdmin\Admin
        group:              App\Entity\UserAdmin\AdminGroup

    admin:                  # Admin Classes
        user:
            class:          App\Admin\UserAdmin\Admin
            controller:     App\Controller\Admin\UserAdmin\AdminController
            # controller:     Sonata\AdminBundle\Controller\CRUDController
            # translation:    SonataUserBundle

        group:
            class:          App\Admin\UserAdmin\AdminGroup
            controller:     App\Controller\Admin\UserAdmin\AdminGroupController
            # controller:     Sonata\AdminBundle\Controller\CRUDController
            # translation:    SonataUserBundle

    google_authenticator:
        enabled: true
        server:  '%env(resolve:SERVER_URL)%'
        ip_white_list:
            - 127.0.0.1
            - ::1
        forced_for_role:
            - ROLE_ADMIN
        

    profile:
        default_avatar: 'bundles/sonatauser/default_avatar.png' # Default avatar displayed if the user doesn't have one

    mailer: sonata.user.mailer.default # Service used to send emails