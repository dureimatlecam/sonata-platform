parameters:

    # Custom controller for CKEditor browser/upload images
    sonata.media.admin.media.controller: App\Controller\Admin\Media\CustomUploadCKEditorController

services:

#############################################
############### ADMIN ENTITY ################
#############################################

    # User Admin
    sonata.user:
        class: App\Admin\User\UserAdmin
        arguments: [~, App\Entity\User\User, App\Controller\Admin\User\UserAdminController]
        tags:
            - { name: sonata.admin, manager_type: orm, group: users, label: service.app.adminuser.url }
        public: true
    
    # Maintenance Admin
    sonata.maintenance:
        class: App\Admin\Maintenance\MaintenanceAdmin
        arguments: [~, App\Entity\Configuration\Configuration, App\Controller\Admin\Maintenance\MaintenanceAdminController]
        tags:
            - { name: sonata.admin, manager_type: orm, group: customize, label: service.app.maintenance.url }
    
    # Redirect Admin
    sonata.redirect:
        class: App\Admin\Redirect\RedirectAdmin
        arguments: [~, App\Entity\Redirect\Redirect, App\Controller\Admin\Redirect\RedirectAdminController]
        tags:
            - { name: sonata.admin, manager_type: orm, group: admin, label: service.app.redirect.url }
        public: true

#############################################
################### BLOCK ###################
#############################################
    # Blocks for sonata admin
    sonata.block.service.custom.configuration:
        class: App\Service\Admin\Block\ConfigurationBlockService
        arguments:
            - '@twig'
            - ~
            - '@parameter_bag'
            - '@doctrine.orm.default_entity_manager'
            - '@cache.app'
            - '@request_stack'
            - '@router.default'
            - '@translator.data_collector'
        tags:
            - { name: sonata.block }

#############################################
################# OVERRIDE ##################
#############################################

    # Inject EditableRoleBuilder in Custom SecurityRolesType
    custom.user.editable_role_builder:
        class: Sonata\UserBundle\Security\EditableRolesBuilder
        public: true
        arguments: ['@security.token_storage', '@security.authorization_checker', '@sonata.admin.pool', '%security.role_hierarchy.roles%']
        calls:
            - [setTranslator, ['@translator']]
